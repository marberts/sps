
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(sps)
> 
> set.seed(14235)
> 
> # Corner cases
> all.equal(
+   inclusion_prob(1:3, c(0, 1, 0), factor(c(2, 2, 2), levels = 1:3)),
+   1:3 / 6
+ )
[1] TRUE
> all.equal(
+   inclusion_prob(1:6, c(0, 3), c(1, 1, 2, 1, 2, 2)),
+   c(0, 0, 1, 0, 1, 1)
+ )
[1] TRUE
> 
> # No rounds
> x <- c(1:4, 10:8, 5:7)
> all.equal(inclusion_prob(x, 4), x / 55 * 4)
[1] TRUE
> 
> # One round
> x <- c(x, 100)
> all.equal(inclusion_prob(x, 4), c(x[1:10] / 55 * 3, 1))
[1] TRUE
> 
> # Two rounds
> x <- c(20, x)
> all.equal(inclusion_prob(x, 5), c(1, x[2:11] / 55 * 3, 1))
[1] TRUE
> 
> # Strata should be independent
> all.equal(
+   inclusion_prob(x, c(4, 3), gl(2, 6)),
+   c(inclusion_prob(x[1:6], 4), inclusion_prob(x[7:12], 3))
+ )
[1] TRUE
> 
> # Compare with example 1 for sampling::inclusionprobabilities()
> all.equal(
+   inclusion_prob(1:20, 12),
+   c(1:16 / 136 * 8, rep(1, 4))
+ )
[1] TRUE
> 
> # Should agree with design weights
> samp <- sps(x, c(4, 3), gl(2, 6))
> all.equal(
+   1 / inclusion_prob(x, c(4, 3), gl(2, 6))[samp],
+   weights(samp)
+ )
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.401   0.152   0.605 
