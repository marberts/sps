
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(sps)
> 
> set.seed(1234)
> 
> # Corner cases
> w <- rep(1, 10)
> 
> # All TA units gives a matrix of 1s
> all.equal(
+   sps_repweights(w, 5, tau = 3),
+   structure(matrix(1, 10, 5), tau = 3)
+ )
[1] TRUE
> all.equal(
+   sps_repweights(w, 5, dist = rnorm),
+   structure(matrix(1, 10, 5), tau = 1)
+ )
[1] TRUE
> 
> # Asking for 0 repweights gives a matrix with no columns
> all.equal(
+   sps_repweights(w, 0),
+   structure(matrix(numeric(0), 10, 0), tau = 1)
+ )
[1] TRUE
> all.equal(
+   sps_repweights(w, 0, dist = rnorm),
+   structure(matrix(numeric(0), 10, 0), tau = 1)
+ )
[1] TRUE
> 
> # Supply no weights gives a matrix with no rows
> all.equal(
+   sps_repweights(integer(0), 5),
+   structure(matrix(numeric(0), 0, 5), tau = 1)
+ )
[1] TRUE
> all.equal(
+   sps_repweights(integer(0), 5, dist = rnorm),
+   structure(matrix(numeric(0), 0, 5), tau = 1)
+ )
[1] TRUE
> 
> # All rep weights should be positive with the TA strata having all 1s
> all(sps_repweights(1:5, tau = 2) > 0)
[1] TRUE
> all(sps_repweights(1:5, tau = 2)[1, ] == 1)
[1] TRUE
> 
> # Check against bootstrapFP:::generalised()
> # Fixed a bug with the exponential case by replaing exp() with rexp()
> bootstrapFP_fixed <- function(ys, pks, B) {
+   n <- length(ys)
+   ht <- vector("numeric", length = B)
+   w <- 1 / pks
+   for (b in seq_len(B)) {
+     a <- 1 + (rexp(n) - 1) * sqrt(1 - pks)
+     ws <- a * w
+     ht[b] <- sum(ys * ws)
+   }
+   HT <- sum(w * ys)
+   (sum((ht - HT))^2) / B
+ }
> 
> w <- 1 / c(1, runif(98), 1)
> y <- rlnorm(100)
> 
> set.seed(51423)
> rw <- sps_repweights(w, 100, dist = function(x) rexp(x) - 1)
> var1 <- sum(colSums(rw * y) - sum(w * y))^2 / 100
> 
> set.seed(51423)
> var2 <- bootstrapFP_fixed(y, 1 / w, 100)
> 
> all.equal(var1, var2)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  0.640   0.189   1.256 
